[project]
name = "YourMealPlanner"
version = "0.1.0"
description = "A comprehensive meal planning and shopping list application"
readme = "README.md"
requires-python = ">=3.13.0"
dependencies = [
    "requests>=2.32.3",
    "python-dotenv>=1.0.1",
    "sqlalchemy>=2.0.35",
    "sqlmodel==0.0.22",
    "greenlet>=3.1.1",
    "termcolor>=2.4.0",
    "typing-extensions>=4.12.2",
    "pydantic[email]>=2.9.2",
    "pydantic-settings>=2.7.0",
    "fastapi>=0.115.6",
    "uvicorn>=0.32.1",
    "aiosqlite==0.21.0",
    "asyncpg==0.30.0",
    "python-multipart>=0.0.20",
    "redis==5.2.1",
    "hiredis>=3.1.0",
    "alembic==1.14.1",
    "structlog==25.1.0",
    "fastapi-sqla==3.4.8",
    "fakeredis>=2.27.0",
]

[dependency-groups]
app-core = [
    "fastapi>=0.115.6",
    "pydantic[email]>=2.9.2",
    "pydantic-settings>=2.7.0",
    "sqlmodel==0.0.22",
    "sqlalchemy>=2.0.35",
    "aiosqlite==0.21.0", 
    "asyncpg==0.30.0",
    "redis==5.2.1",
    "python-multipart>=0.0.20",
    "python-dotenv>=1.0.1",
    "typing-extensions>=4.12.2",
    "werkzeug>=3.1.3",
    "requests>=2.32.3",
    "uvicorn>=0.32.1",
    "structlog==25.1.0",
    "email-validator>=2.1.0",
    "PyJWT==2.10.1",
]

test = [
    { include-group = "app-core" },
    "pytest==8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov==6.0.0",
    "coverage>=7.6.10",
    "pytest-mock>=3.14.0",
    "httpx==0.28.1",
    "asyncio>=3.4.3",
]

lint = [
    "ruff>=0.8.4",
    "mypy",
    "mypy-extensions",
    "types-cryptography==3.3.23.2",
    "types-jwt==0.1.3",
    "types-redis>=4.6.0.20241004",
]

db = [
    "sqlalchemy>=2.0.35",
    "sqlmodel==0.0.22",
    "aiosqlite==0.21.0",
    "asyncpg==0.30.0",
    "alembic==1.14.1",
    "sqlparse>=0.5.1",
]

dev = [
    { include-group = "test" },
    { include-group = "lint" },
    "nox>=2025.2.9",
    "wheel>=0.44.0",
    "werkzeug>=3.1.3",
    "deprecated==1.2.18",
    "wrapt==1.17.2",
]

docs = [
    "sphinx",
    "sphinx-rtd-theme",
    "mako==1.3.8",
]

auth = [
    "pyjwt==2.10.1",
    "aniso8601>=0.8.0",
    "pytz>=2021.1",
]

serialization = [
    "msgspec==0.19.0",
    "packaging==24.2",
    "jinja2",
    "markupsafe",
    "cachelib",
    "certifi",
    "charset-normalizer",
    "click",
    "idna",
    "itsdangerous",
    "six",
    "urllib3",
]

utils = [
    "termcolor>=2.4.0",
    "typing-extensions>=4.12.2",
]

e2e = [
    { include-group = "test" },
    "selenium",
    "webdriver-manager",
]

[project.optional-dependencies]
test = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.28.1",
    "pytest-mock>=3.12.0",
    "coverage>=7.4.1",
]

[tool.uv.sources]
my-project = { workspace = true }

[tool.mypy]
python_version = "3.13.0"
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "fastapi.*",
    "sqlmodel.*"
]
ignore_missing_imports = true

[tool.poetry.dependencies]
alembic = "^1.14.1"

[tool.pytest.ini_options]
asyncio_mode = "auto"
python_classes = []
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]
